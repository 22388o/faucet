{"version":3,"sources":["../../fabric-workspace/types/hash256.js","../../fabric-workspace/constants.js","../../web/types/remote.js","settings/state.js","../../fabric-workspace/functions/_sortKeys.js","../../fabric-workspace/types/message.js","../../fabric-workspace/types/label.js","../../fabric-workspace/functions/padDigits.js","serviceWorker.js","types/component.js","components/FabricBridge.js","components/FabricTransactionList.js","components/FaucetDripForm.js","Home.js","App.js","index.js","../../fabric-workspace/types/actor.js"],"names":["crypto","require","Hash256","settings","input","randomBytes","toString","this","Object","assign","hash","digest","value","reverse","Buffer","Error","createHash","update","from","module","exports","MAGIC_BYTES","GENERIC_MESSAGE_TYPE","parseInt","slice","LOG_MESSAGE_TYPE","GENERIC_LIST_TYPE","PEER_PORT","MAX_PEERS","PRECISION","BITCOIN_GENESIS","BITCOIN_GENESIS_ROOT","FABRIC_KEY_DERIVATION_PATH","HEADER_SIZE","LARGE_COLLECTION_SIZE","BLOCK_CANDIDATE","CHAT_MESSAGE","ZERO_LENGTH_PLAINTEXT","LIGHTNING_TEST_HEADER","LIGHTNING_PROTOCOL_H_INIT","LIGHTNING_PROTOCOL_PROLOGUE","LIGHTNING_BMM_HEADER","LIGHTNING_SIDECHAIN_NUM","LIGHTNING_SIDEBLOCK_HASH","LIGHTNING_PARENT_SIDEBLOCK_HASH","MAX_FRAME_SIZE","MAX_MEMORY_ALLOC","MAX_STACK_HEIGHT","MAX_MESSAGE_SIZE","MAX_CHANNEL_VALUE","MAX_CHAT_MESSAGE_LENGTH","MAX_TX_PER_BLOCK","MACHINE_MAX_MEMORY","OP_CYCLE","OP_DONE","OP_0","OP_36","OP_CHECKSIG","OP_DUP","OP_EQUAL","OP_SHA256","OP_HASH160","OP_PUSHDATA1","OP_RETURN","OP_EQUALVERIFY","OP_SEPARATOR","P2P_GENERIC","P2P_IDENT_REQUEST","P2P_IDENT_RESPONSE","P2P_CHAIN_SYNC_REQUEST","P2P_ROOT","P2P_PING","P2P_PONG","P2P_START_CHAIN","P2P_INSTRUCTION","P2P_BASE_MESSAGE","P2P_STATE_ROOT","P2P_STATE_COMMITTMENT","P2P_STATE_CHANGE","P2P_STATE_REQUEST","P2P_TRANSACTION","P2P_CALL","P2P_SESSION_ACK","PEER_CANDIDATE","DOCUMENT_PUBLISH_TYPE","DOCUMENT_REQUEST_TYPE","SESSION_START","VERSION_NUMBER","querystring","fetch","parser","Actor","WebSocket","Message","CONTENT_TYPE","Remote","config","authority","entropy","Math","random","secure","port","host","socket","endpoint","_state","status","messages","meta","count","Uint8Array","buffer","isArrayBufferSupported","arrayBufferToBufferAsArgument","arrayBufferToBufferCycle","ab","byteLength","view","i","length","message","console","log","error","emit","packet","JSON","stringify","data","fromRaw","toObject","push","name","params","call","fromVector","toRaw","send","exception","binaryType","addEventListener","_handleSocketClose","bind","_handleSocketOpen","_handleSocketMessage","_handleSocketError","_OPTIONS","options","results","definition","description","components","list","routes","attributes","names","type","path","parts","self","split","protocol","url","result","response","opts","method","headers","username","password","join","mode","body","ok","formatter","parse","get","json","verbosity","text","warn","created","Date","toISOString","msg","raw","actor","content","id","key","request","obj","playnet","seed","balances","asset","symbol","confirmed","chains","tip","genesis","channels","keys","identity","nodes","orders","peers","alias","transactions","state","sort","reduce","struct","Label","padDigits","TYPE_ETHEREUM_BLOCK","_id","TYPE_ETHEREUM_BLOCK_NUMBER","magic","alloc","version","size","parent","write","defineProperty","enumerable","asRaw","concat","header","map","byte","entries","types","ret","entry","charsnt","allocate","_setBuff","vector","prototype","set","code","padded","number","digits","Array","max","String","Boolean","window","location","hostname","match","FabricComponent","props","import","merge","integrity","ec","EC","ref","React","createRef","dochash","start","setState","Card","Content","children","constructor","Component","FabricBridge","defaults","remote","_syncState","connect","executeMethod","ping","fluid","Button","Group","floated","onClick","Icon","Header","as","Feed","Event","style","fontSize","fontFamily","color","extra","a","on","_handleRemoteReady","_handleRemoteMessage","_handleRemoteError","TransactionList","className","Table","celled","Row","HeaderCell","Body","transaction","index","Cell","inputs","outputs","signature","FaucetDripForm","network","requests","fields","address","secret","form","bitcoin","mainnet","regtest","testnet","e","target","networks","isValid","validateAddress","errors","email","submittedName","submittedEmail","sync","Form","onSubmit","onChange","handleChange","Field","Input","action","placeholder","onKeyUp","_handleAddressChange","attached","preimage","toOutputScript","Home","bridge","current","then","Visibility","onBottomPassed","_handleMastheadBottomPassed","Segment","Container","marginTop","_handleBridgeChange","event","calculations","App","snapshots","exact","element","FabricTransactionList","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","EventEmitter","_sortKeys","_readObject","string","serialize","format","commit","encoding","E","trace"],"mappings":"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","file":"static/js/main.af3443c7.chunk.js","sourcesContent":["'use strict';\n\nconst crypto = require('crypto');\n\n/**\n * Simple interaction with 256-bit spaces.\n */\nclass Hash256 {\n  /**\n   * Create an instance of a `Hash256` object by calling `new Hash256()`,\n   * where `settings` can be provided to supply a particular input object.\n   * \n   * If the `settings` is not a string, `input` must be provided.\n   * @param {Object} settings \n   * @param {String} settings.input Input string to map as 256-bit hash.\n   */\n  constructor (settings = {}) {\n    if (typeof settings === 'string') settings = { input: settings };\n    if (!settings.input) settings.input = crypto.randomBytes(32).toString('hex');\n\n    this.settings = Object.assign({\n      hash: Hash256.digest(settings.input)\n    }, settings);\n  }\n\n  /**\n   * Produce a SHA256 digest of some input data.\n   * @param {String|Buffer} input Content to digest.\n   * @returns {String} `SHA256(input)` as a hexadecimal string.\n   */\n  static digest (input) {\n    if (typeof input !== 'string' && !(input instanceof Buffer)) {\n      throw new Error(`Input to process must be of type \"String\" or \"Buffer\" to digest.`);\n    }\n\n    // consume and output as string\n    return crypto.createHash('sha256').update(input).digest('hex');\n  }\n\n  // TODO: document `hash256.value`\n  get value () {\n    return Hash256.digest(this.settings.input);\n  }\n\n  /**\n   * Reverses the bytes of the digest.\n   */\n  static reverse (input = '') {\n    return Buffer.from(input, 'hex').reverse().toString('hex');\n  }\n\n  reverse (input = this.value) {\n    return Hash256.reverse(input);\n  }\n}\n\nmodule.exports = Hash256;","/*\n  Fabric Core Constants.\n  ---\n  Author: Fabric Labs\n  Copyright: All Rights Reserved.\n */\n'use strict';\n\n// Dependencies\nconst crypto = require('crypto');\n\n// Networking and Environment\nconst PEER_PORT = 9999;\nconst MAX_PEERS = 32;\nconst PRECISION = 100;\n\n// Fabric Core\nconst BITCOIN_GENESIS = '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f';\nconst BITCOIN_GENESIS_ROOT = '4a5e1e4baab89f3a32518a88c31bc87f618f76673e2cc77ab2127b7afdeda33b';\nconst FABRIC_KEY_DERIVATION_PATH = \"m/44'/0'/0'/0/0\";\n\n// Message Constants\nconst MAGIC_BYTES = 0xC0D3F33D;\nconst VERSION_NUMBER = 0x00; // 0 for development, pre-alpha, 1 for production\nconst HEADER_SIZE = 48; // 32 + 16 bytes\nconst LARGE_COLLECTION_SIZE = 10; // TODO: test with 1,000,000\nconst MAX_MESSAGE_SIZE = 4096 - HEADER_SIZE;\n\n// Stacks and Frames\nconst MAX_STACK_HEIGHT = 32; // max height of stack (number of elements)\nconst MAX_FRAME_SIZE = 32; // max size of a stack frame in bytes\nconst MAX_MEMORY_ALLOC = MAX_STACK_HEIGHT * MAX_FRAME_SIZE;\nconst MAX_TX_PER_BLOCK = 100;\nconst MAX_CHANNEL_VALUE = 100000000;\n\n// Machine Constraints\nconst MACHINE_MAX_MEMORY = MAX_MEMORY_ALLOC * MAX_MESSAGE_SIZE;\nconst MAX_CHAT_MESSAGE_LENGTH = 2048;\n\n// FABRIC ONLY\nconst GENERIC_MESSAGE_TYPE = MAGIC_BYTES + parseInt(crypto.createHash('sha256').update('@types/GenericMessage').digest('hex').slice(0, 4), 16);\nconst LOG_MESSAGE_TYPE = MAGIC_BYTES + parseInt(crypto.createHash('sha256').update('@types/GenericLogMessage').digest('hex').slice(0, 4), 16);\nconst GENERIC_LIST_TYPE = MAGIC_BYTES + parseInt(crypto.createHash('sha256').update('@types/GenericList').digest('hex').slice(0, 4), 16);\nconst DOCUMENT_PUBLISH_TYPE = 998;\nconst DOCUMENT_REQUEST_TYPE = 999;\n\n// Opcodes\nconst OP_CYCLE = '00';\nconst OP_DONE = 'ff';\n\n// Bitcoin\nconst OP_0 = '00';\nconst OP_36 = '24';\nconst OP_CHECKSIG = 'ac';\nconst OP_DUP = '76';\nconst OP_EQUAL = '87';\nconst OP_SHA256 = 'a8';\nconst OP_HASH160 = 'a9';\nconst OP_PUSHDATA1 = '4c';\nconst OP_RETURN = '6a';\nconst OP_EQUALVERIFY = '88';\nconst OP_SEPARATOR = 'ab';\n\nconst P2P_GENERIC = 0x80; // 128 in decimal\nconst P2P_IDENT_REQUEST = 0x01; // 1, or the identity\nconst P2P_IDENT_RESPONSE = 0x11;\nconst P2P_ROOT = 0x00000000;\nconst P2P_PING = 0x00000012; // same ID as Lightning (18)\nconst P2P_PONG = 0x00000013; // same ID as Lightning (19)\nconst P2P_INSTRUCTION = 0x00000020; // TODO: select w/ no overlap\nconst P2P_START_CHAIN = 0x00000021;\nconst P2P_STATE_REQUEST = 0x00000029; // TODO: select w/ no overlap\nconst P2P_STATE_ROOT = 0x00000030; // TODO: select w/ no overlap\nconst P2P_BASE_MESSAGE = 0x00000031; // TODO: select w/ no overlap\nconst P2P_STATE_COMMITTMENT = 0x00000032; // TODO: select w/ no overlap\nconst P2P_STATE_CHANGE = 0x00000033; // TODO: select w/ no overlap\nconst P2P_TRANSACTION = 0x00000039; // TODO: select w/ no overlap\nconst P2P_CALL = 0x00000042;\nconst P2P_CHAIN_SYNC_REQUEST = 0x55;\nconst P2P_SESSION_ACK = 0x4200;\n\nconst PEER_CANDIDATE = 0x09;\n// TODO: should be 0x02 for Bitcoin P2P\nconst BLOCK_CANDIDATE = 0x03;\n\nconst SESSION_START = 0x02;\nconst CHAT_MESSAGE = 0x67;\n\n// Lightning\nconst LIGHTNING_TEST_HEADER = 'D0520C6E';\nconst LIGHTNING_PROTOCOL_H_INIT = 'Noise_XK_secp256k1_ChaChaPoly_SHA256';\nconst LIGHTNING_PROTOCOL_PROLOGUE = 'lightning';\n\n// Lightning BMM\nconst LIGHTNING_BMM_HEADER = 'D0520C6E';\nconst LIGHTNING_SIDECHAIN_NUM = 0xFF; // 1-byte - sidechain number\n\nconst LIGHTNING_SIDEBLOCK_HASH = 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000; // 32-bytes\nconst LIGHTNING_PARENT_SIDEBLOCK_HASH = 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001; // 32-bytes\n\nconst ZERO_LENGTH_PLAINTEXT = '';\n\nmodule.exports = {\n  PEER_PORT,\n  MAX_PEERS,\n  PRECISION,\n  BITCOIN_GENESIS,\n  BITCOIN_GENESIS_ROOT,\n  FABRIC_KEY_DERIVATION_PATH,\n  HEADER_SIZE,\n  GENERIC_MESSAGE_TYPE,\n  LOG_MESSAGE_TYPE,\n  GENERIC_LIST_TYPE,\n  LARGE_COLLECTION_SIZE,\n  BLOCK_CANDIDATE,\n  CHAT_MESSAGE,\n  ZERO_LENGTH_PLAINTEXT,\n  LIGHTNING_TEST_HEADER,\n  LIGHTNING_PROTOCOL_H_INIT,\n  LIGHTNING_PROTOCOL_PROLOGUE,\n  LIGHTNING_BMM_HEADER,\n  LIGHTNING_SIDECHAIN_NUM,\n  LIGHTNING_SIDEBLOCK_HASH,\n  LIGHTNING_PARENT_SIDEBLOCK_HASH,\n  MAGIC_BYTES,\n  MAX_FRAME_SIZE,\n  MAX_MEMORY_ALLOC,\n  MAX_MESSAGE_SIZE,\n  MAX_STACK_HEIGHT,\n  MAX_CHANNEL_VALUE,\n  MAX_CHAT_MESSAGE_LENGTH,\n  MAX_TX_PER_BLOCK,\n  MACHINE_MAX_MEMORY,\n  OP_CYCLE,\n  OP_DONE,\n  OP_0,\n  OP_36,\n  OP_CHECKSIG,\n  OP_DUP,\n  OP_EQUAL,\n  OP_SHA256,\n  OP_HASH160,\n  OP_PUSHDATA1,\n  OP_RETURN,\n  OP_EQUALVERIFY,\n  OP_SEPARATOR,\n  P2P_GENERIC,\n  P2P_IDENT_REQUEST,\n  P2P_IDENT_RESPONSE,\n  P2P_CHAIN_SYNC_REQUEST,\n  P2P_ROOT,\n  P2P_PING,\n  P2P_PONG,\n  P2P_START_CHAIN,\n  P2P_INSTRUCTION,\n  P2P_BASE_MESSAGE,\n  P2P_STATE_ROOT,\n  P2P_STATE_COMMITTMENT,\n  P2P_STATE_CHANGE,\n  P2P_STATE_REQUEST,\n  P2P_TRANSACTION,\n  P2P_CALL,\n  P2P_SESSION_ACK,\n  PEER_CANDIDATE,\n  DOCUMENT_PUBLISH_TYPE,\n  DOCUMENT_REQUEST_TYPE,\n  SESSION_START,\n  VERSION_NUMBER\n};\n","'use strict';\n\nconst {\n  P2P_CALL\n} = require('@fabric/core/constants');\n\n// Internal Dependencies\nconst http = require('http');\nconst https = require('https');\nconst querystring = require('querystring');\n\n// External Dependencies\nconst fetch = require('node-fetch');\nconst parser = require('content-type');\nconst ws = require('ws').WebSocket;\n\n// Internal Types\nconst Actor = require('@fabric/core/types/actor');\nconst Message = require('@fabric/core/types/message');\nconst CONTENT_TYPE = 'application/json';\n\n/**\n * Interact with a remote {@link Resource}.  This is currently the only\n * HTTP-related code that should remain in @fabric/core — all else must\n * be moved to @fabric/http before final release!\n * @type {Remote}\n * @property {Object} config\n * @property {Boolean} secure\n */\nclass Remote extends Actor {\n  /**\n   * An in-memory representation of a node in our network.\n   * @param       {Object} target - Target object.\n   * @param       {String} target.host - Named host, e.g. \"localhost\".\n   * @param       {String} target.secure - Require TLS session.\n   * @constructor\n   */\n  constructor (config = {}) {\n    super(config);\n\n    this.settings = Object.assign({\n      authority: 'localhost',\n      entropy: Math.random(),\n      secure: true,\n      port: 443\n    }, config);\n\n    this.host = this.settings.authority;\n    this.secure = this.settings.secure;\n    this.socket = null;\n\n    this.endpoint = `${(this.secure) ? 'wss' : 'ws'}:${this.host}:${this.port}/`;\n\n    this._state = {\n      status: 'PAUSED',\n      messages: [],\n      meta: {\n        messages: {\n          count: 0\n        }\n      }\n    };\n\n    return this;\n  }\n\n  get port () {\n    return this.settings.port;\n  }\n\n  get isArrayBufferSupported () {\n    return (new Buffer(new Uint8Array([1]).buffer)[0] === 1);\n  }\n\n  get arrayBufferToBuffer () {\n    return this.isArrayBufferSupported ? this.arrayBufferToBufferAsArgument : this.arrayBufferToBufferCycle;\n  }\n    \n  arrayBufferToBufferAsArgument(ab) {\n    return new Buffer(ab);\n  }\n\n  arrayBufferToBufferCycle(ab) {\n    var buffer = new Buffer(ab.byteLength);\n    var view = new Uint8Array(ab);\n    for (var i = 0; i < buffer.length; ++i) {\n        buffer[i] = view[i];\n    }\n    return buffer;\n  }\n\n  async _handleSocketClose (message) {\n    this._state.status = 'CLOSED';\n    console.log('[FABRIC:REMOTE]', 'Socket close:', message);\n  }\n\n  async _handleSocketError (message) {\n    console.error('[FABRIC:REMOTE]', 'Socket error:', message);\n    this.emit('error', message);\n  }\n\n  async _handleSocketMessage (packet) {\n    this.emit('debug', `[FABRIC:REMOTE] Socket packet ${JSON.stringify(packet)}`);\n    const length = packet.data.byteLength;\n    console.log('length:', length);\n    const buffer = Buffer.from(packet.data);\n    console.log('buffer:', buffer);\n    const message = Message.fromRaw(buffer).toObject();\n    console.log('message:', message);\n    this._state.messages.push(message);\n    ++this._state.meta.messages.count;\n    this.emit('message', message);\n  }\n\n  async _handleSocketOpen (message) {\n    this._state.status = 'CONNECTED';\n    this.emit('ready');\n  }\n\n  async executeMethod (name, params = []) {\n    const call = Message.fromVector([P2P_CALL, JSON.stringify([name, params])]);\n    console.log('call:', call);\n    console.log('raw:', call.toRaw());\n    return this.socket.send(call.toRaw());\n  }\n\n  async connect () {\n    this._state.status = 'CONNECTING';\n\n    try {\n      this.socket = new WebSocket(this.endpoint);\n      console.log('socket:', this.socket);\n    } catch (exception) {\n      console.error('[FABRIC:REMOTE]', 'Unable to connect:', exception);\n    }\n\n    if (this.socket) {\n      this.socket.binaryType = 'arraybuffer';\n      this.socket.addEventListener('close', this._handleSocketClose.bind(this));\n      this.socket.addEventListener('open', this._handleSocketOpen.bind(this));\n      this.socket.addEventListener('message', this._handleSocketMessage.bind(this));\n      this.socket.addEventListener('error', this._handleSocketError.bind(this));\n    }\n\n    return this;\n  }\n\n  /**\n   * Enumerate the available Resources on the remote host.\n   * @return {Configuration} An object with enumerable key/value pairs for the Application Resource Contract.\n   */\n  async enumerate () {\n    const options = await this._OPTIONS('/');\n    const results = [];\n\n    for (const name in options) {\n      const definition = options[name];\n      results.push({\n        name: definition.name,\n        description: definition.description,\n        components: Object.assign({\n          list: 'maki-resource-list',\n          view: 'maki-resource-view'\n        }, definition.components),\n        routes: definition.routes,\n        attributes: definition.attributes,\n        names: definition.names\n      });\n    }\n\n    return options;\n  }\n\n  /**\n   * Make an HTTP request to the configured authority.\n   * @param {String} type One of `GET`, `PUT`, `POST`, `DELETE`, or `OPTIONS`.\n   * @param {String} path The path to request from the authority.\n   * @param {Object} [params] Options.\n   * @returns {FabricHTTPResult}\n   */\n  async request (type, path, params = {}) {\n    const self = this;\n    const parts = self.settings.authority.split(':');\n\n    // TODO: use onion address for secure mode\n    const host = parts[0] || ((self.secure) ? 'localhost' : 'localhost');\n    let port = parts[1] || ((self.secure) ? 443 : 80);\n\n    if (this.settings.port) {\n      port = this.settings.port;\n    }\n\n    const protocol = (!self.secure) ? 'http' : 'https';\n    let url = `${protocol}://${host}:${port}${path}`;\n\n    let result = null;\n    let response = null;\n    let headers = {\n      'Accept': CONTENT_TYPE,\n      'Content-Type': CONTENT_TYPE\n    };\n\n    let opts = {\n      method: type,\n      headers: headers\n    };\n\n    // TODO: break out into independent auth module\n    if (this.settings.username || this.settings.password) {\n      headers['Authorization'] = `Basic ${Buffer.from([\n        this.settings.username || '',\n        this.settings.password || ''\n      ].join(':')).toString('base64')}`;\n    }\n\n    switch (params.mode) {\n      case 'query':\n        url += '?' + querystring.stringify(params.body);\n        break;\n      default:\n        try {\n          opts.body = JSON.stringify(params.body);\n        } catch (exception) {\n          console.error('[FABRIC:REMOTE] Could not prepare request:', exception);\n        }\n\n        opts = Object.assign(opts, {\n          body: params.body || null\n        });\n        break;\n    }\n\n    // Core Logic\n    try {\n      response = await fetch(url, opts);\n    } catch (e) {\n      self.emit('error', `[REMOTE] exception: ${e}`);\n    }\n\n    if (!response) {\n      return {\n        status: 'error',\n        message: 'No response to request.'\n      };\n    }\n\n    switch (response.status) {\n      case 404:\n        result = {\n          status: 'error',\n          message: 'Document not found.'\n        };\n        break;\n      default:\n        if (response.ok) {\n          const formatter = parser.parse(response.headers.get('content-type'));\n          switch (formatter.type) {\n            case 'application/json':\n              try {\n                result = await response.json();\n              } catch (E) {\n                console.error('[REMOTE]', 'Could not parse JSON:', E);\n              }\n              break;\n            default:\n              if (this.settings.verbosity >= 4) self.emit('warning', `[FABRIC:REMOTE] Unhandled headers content type: ${formatter.type}`);\n              result = await response.text();\n              break;\n          }\n        } else {\n          if (this.settings.verbosity >= 4) console.warn('[FABRIC:REMOTE]', 'Unmanaged HTTP status code:', response.status);\n\n          try {\n            result = response.json();\n          } catch (exception) {\n            result = response.text();\n          }\n        }\n        break;\n    }\n\n    return result;\n  }\n\n  async ping () {\n    this.send({\n      created: (new Date()).toISOString(),\n      type: 'PING'\n    });\n  }\n\n  async send (message) {\n    const msg = Message.fromVector(['GenericMessage', JSON.stringify(message)]);\n    const raw = msg.toRaw();\n\n    console.log('raw:', raw);\n    console.log('raw (string):', raw.toString('hex'));\n\n    const actor = new Actor({ content: raw.toString('hex') });\n    this.socket.send(raw);\n    return actor.id;\n  }\n\n  async sendAsJSON (message) {\n    this.socket.send({\n      content: message\n    });\n  }\n\n  /**\n   * HTTP PUT against the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} body - Map of parameters to supply.\n   * @return {FabricHTTPResult|String} Result of request.\n   */\n  async _PUT (key, body) {\n    return this.request('put', key, { body });\n  }\n\n  /**\n   * HTTP GET against the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {FabricHTTPResult|String} Result of request.\n   */\n  async _GET (key, params) {\n    return this.request('get', key, params);\n  }\n\n  /**\n   * HTTP POST against the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {FabricHTTPResult|String} Result of request.\n   */\n  async _POST (key, obj, params = {}) {\n    let result = null;\n    let options = null;\n\n    switch (params.mode) {\n      case 'query':\n        options = Object.assign({}, {\n          body: obj,\n          mode: 'query'\n        });\n        break;\n      default:\n        options = Object.assign({}, params, {\n          body: obj,\n          mode: 'body'\n        });\n        break;\n    }\n\n    result = await this.request('post', key, options);\n\n    return result;\n  }\n\n  /**\n   * HTTP OPTIONS on the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {Object} - Full description of remote resource.\n   */\n  async _OPTIONS (key, params) {\n    return this.request('options', key, params);\n  }\n\n  /**\n   * HTTP PATCH on the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} body - Map of parameters to supply.\n   * @return {Object} - Full description of remote resource.\n   */\n  async _PATCH (key, body) {\n    return this.request('patch', key, { body });\n  }\n\n  /**\n   * HTTP DELETE on the configured Authority.\n   * @param  {String} path - HTTP Path to request.\n   * @param  {Object} params - Map of parameters to supply.\n   * @return {Object} - Full description of remote resource.\n   */\n  async _DELETE (key, params) {\n    return this.request('delete', key, params);\n  }\n\n  async _SEARCH (key, params) {\n    return this.request('search', key, params);\n  }\n}\n\nmodule.exports = Remote;\n","'use strict';\n\n// TODO: evaluate why have to climb tree?\nconst playnet = require('../../node_modules/@fabric/core/settings/playnet');\n\nmodule.exports = {\n  port: 9999,\n  seed: null,\n  status: 'PAUSED',\n  balances: [\n    { asset: 'Bitcoin', symbol: 'BTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'Liquid BTC (LBTC)', symbol: 'BTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'Shyft', symbol: 'SHFT', confirmed: 0, type: 'confirmed' },\n    { asset: 'Bitcoin (testnet)', symbol: 'TBTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'Bitcoin (regtest)', symbol: 'RBTC', confirmed: 0, type: 'confirmed' },\n    { asset: 'BTC A', symbol: 'BTCA', confirmed: 0, type: 'confirmed' },\n    { asset: 'BTC B', symbol: 'BTCB', confirmed: 0, type: 'confirmed' },\n    { asset: 'Lightning BTC', symbol: 'BTC', confirmed: 0.001, type: 'outbound' },\n    { asset: 'Lightning BTC', symbol: 'BTC', confirmed: 0.001, type: 'inbound' }\n  ],\n  chains: [\n    { name: 'Fabric (playnet)', asset: 'PFAB', tip: '???' },\n    { name: 'Bitcoin (mainnet)', asset: 'BTC', tip: '???', genesis: '000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f' },\n    { name: 'Bitcoin (regtest)', asset: 'RBTC', tip: '???' },\n    { name: 'Bitcoin (testnet)', asset: 'TBTC', tip: '???' },\n    { name: 'BTC A (regtest)', asset: 'BTCA', tip: '???' },\n    { name: 'BTC B (regtest)', asset: 'BTCB', tip: '???' },\n    { name: 'Ethereum (Ropsten)', asset: 'ETHR', tip: '???' }\n  ],\n  channels: [],\n  keys: [],\n  identity: {\n    id: '',\n    seed: playnet.key.seed\n  },\n  nodes: [\n/**/'localhost:9977', // BTC   `                                              /**/\n/**/'localhost:9978', // BTCA   \\___                                          /**/\n/**/'localhost:9979', // BTCB   /    }- Together these are the first 3 chains /**/\\\n    'localhost:9980', // Liquid\n    'localhost:9981', // Shyft\n  ],\n  orders: [],\n  peers: [\n    { id: '???', alias: 'NUEVO', host: 'localhost', port: '7777', asset: 'BTC' }\n  ],\n  transactions: []\n};\n","/**\n * Create a new {@link Object} with sorted properties.\n * @param {Object} [state] Object to sort.\n * @returns {Object} Re-sorted instance of `state` as provided.\n */\nmodule.exports = function _sortKeys (state = {}) {\n  return Object.keys(state).sort().reduce((obj, key) => {\n    obj[key] = state[key];\n    return obj;\n  }, {});\n};\n","'use strict';\n\nconst {\n  MAGIC_BYTES,\n  VERSION_NUMBER,\n  HEADER_SIZE,\n  MAX_MESSAGE_SIZE,\n  OP_CYCLE,\n  GENERIC_MESSAGE_TYPE,\n  LOG_MESSAGE_TYPE,\n  GENERIC_LIST_TYPE,\n  P2P_GENERIC,\n  P2P_IDENT_REQUEST,\n  P2P_IDENT_RESPONSE,\n  P2P_ROOT,\n  P2P_PING,\n  P2P_PONG,\n  P2P_START_CHAIN,\n  P2P_INSTRUCTION,\n  P2P_BASE_MESSAGE,\n  P2P_CHAIN_SYNC_REQUEST,\n  P2P_STATE_ROOT,\n  P2P_STATE_COMMITTMENT,\n  P2P_STATE_CHANGE,\n  P2P_STATE_REQUEST,\n  P2P_TRANSACTION,\n  P2P_CALL,\n  CHAT_MESSAGE,\n  DOCUMENT_PUBLISH_TYPE,\n  DOCUMENT_REQUEST_TYPE,\n  BLOCK_CANDIDATE,\n  PEER_CANDIDATE,\n  SESSION_START\n} = require('../constants');\n\n// Dependencies\nconst crypto = require('crypto');\nconst struct = require('struct');\n\n// Fabric Types\nconst Actor = require('./actor');\nconst Label = require('./label');\n\n// Function Definitions\nconst padDigits = require('../functions/padDigits');\n\n// Type Labels\nconst TYPE_ETHEREUM_BLOCK        = parseInt((new Label('types/EthereumBlock'))._id, 16);\nconst TYPE_ETHEREUM_BLOCK_NUMBER = parseInt((new Label('types/EthereumBlockNumber'))._id, 16);\n\n/**\n * The {@link Message} type defines the Application Messaging Protocol, or AMP.\n * Each {@link Actor} in the network receives and broadcasts messages,\n * selectively disclosing new routes to peers which may have open circuits.\n * @type {Object}\n */\nclass Message extends Actor {\n  /**\n   * The `Message` type is standardized in {@link Fabric} as a {@link Array}, which can be added to any other vector to compute a resulting state.\n   * @param  {Object} message Message vector.  Will be serialized by {@link Array#_serialize}.\n   * @return {Message} Instance of the message.\n   */\n  constructor (input = {}) {\n    super(input);\n\n    this.raw = {\n      magic: Buffer.alloc(4),\n      version: Buffer.alloc(4),\n      type: Buffer.alloc(4), // TODO: 8, 32\n      size: Buffer.alloc(4), // TODO: 8, 32\n      hash: Buffer.alloc(32),\n      parent: Buffer.alloc(32),\n      data: null\n    };\n\n    this.raw.magic.write(MAGIC_BYTES.toString(16), 'hex');\n    this.raw.version.write(padDigits(VERSION_NUMBER.toString(16), 8), 'hex');\n\n    if (input.data && input.type) {\n      this.type = input.type;\n\n      if (typeof input.data !== 'string') {\n        this.data = JSON.stringify(input.data);\n      } else {\n        this.data = input.data;\n      }\n    }\n\n    // Set various properties to be unenumerable\n    for (let name of [\n      '@input',\n      '@entity',\n      '_state',\n      'config',\n      'settings',\n      'stack',\n      'observer'\n    ]) Object.defineProperty(this, name, { enumerable: false });\n\n    return this;\n  }\n\n  get body () {\n    return this.raw.data.toString('utf8');\n  }\n\n  get byte () {\n    const input = 0 + '';\n    const num = Buffer.from(`0x${padDigits(input, 8)}`, 'hex');\n    return num;\n  }\n\n  get tu16 () {\n    return parseInt(0);\n  }\n\n  get tu32 () {\n    return parseInt(0);\n  }\n\n  get tu64 () {\n    return parseInt(0);\n  }\n\n  get Uint256 () {\n    // 256 bits\n    return Buffer.from((this.raw && this.raw.hash) ? `0x${padDigits(this.raw.hash, 8)}` : crypto.randomBytes(32));\n  }\n\n  toBuffer () {\n    return this.asRaw();\n  }\n\n  /**\n   * Returns a {@link Buffer} of the complete message.\n   * @return {Buffer} Buffer of the encoded {@link Message}.\n   */\n  asRaw () {\n    return Buffer.concat([this.header, this.raw.data]);\n  }\n\n  toRaw () {\n    return this.asRaw();\n  }\n\n  asTypedArray () {\n    return new Uint8Array(this.asRaw());\n    // TODO: Node 12\n    // return new TypedArray(this.asRaw());\n  }\n\n  asBlob () {\n    return this.asRaw().map(byte => parseInt(byte, 16));\n  }\n\n  toObject () {\n    return {\n      headers: {\n        magic: parseInt(`0x${this.raw.magic.toString('hex')}`, 16),\n        version: parseInt(`${this.raw.version.toString('hex')}`, 16),\n        type: parseInt(`${this.raw.type.toString('hex')}`, 16),\n        size: parseInt(`${this.raw.size.toString('hex')}`, 16),\n        hash: this.raw.hash.toString('hex')\n      },\n      type: this.type,\n      data: this.data\n    };\n  }\n\n  fromObject (input) {\n    return new Message(input);\n  }\n\n  static parseBuffer (buffer) {\n    const message = struct()\n      .charsnt('magic', 4, 'hex')\n      .charsnt('version', 4, 'hex')\n      .charsnt('type', 4, 'hex')\n      .charsnt('size', 4, 'hex')\n      .charsnt('hash', 32, 'hex')\n      .charsnt('data', buffer.length - HEADER_SIZE);\n\n    message.allocate();\n    message._setBuff(buffer);\n\n    return message;\n  }\n\n  static fromBuffer (buffer) {\n    return Message.fromRaw(buffer);\n  }\n\n  static fromRaw (input) {\n    if (!input) return null;\n    if (!(input instanceof Buffer)) throw new Error('Input must be a buffer.');\n    // if (input.length < HEADER_SIZE) return null;\n    // if (input.length > MAX_MESSAGE_SIZE) return new Error('Input too large.');\n\n    const message = new Message();\n\n    message.raw = {\n      magic: input.slice(0, 4),\n      version: input.slice(4, 8),\n      type: input.slice(8, 12),\n      size: input.slice(12, 16),\n      hash: input.slice(16, 48)\n    };\n\n    message.data = input.slice(HEADER_SIZE);\n\n    return message;\n  }\n\n  static fromVector (vector = ['LogMessage', 'No vector provided.']) {\n    let message = null;\n\n    try {\n      message = new Message({\n        type: vector[0],\n        data: vector[1]\n      });\n    } catch (exception) {\n      console.error('[FABRIC:MESSAGE]', 'Could not construct Message:', exception);\n    }\n\n    return message;\n  }\n\n  /* get [Symbol.toStringTag] () {\n    return `<Message | ${JSON.stringify(this.raw)}>`;\n  } */\n\n  get id () {\n    return crypto.createHash('sha256').update(this.asRaw()).digest('hex');\n  }\n\n  get types () {\n    // Message Types\n    return {\n      'GenericMessage': GENERIC_MESSAGE_TYPE,\n      'GenericLogMessage': LOG_MESSAGE_TYPE,\n      'GenericList': GENERIC_LIST_TYPE,\n      'GenericQueue': GENERIC_LIST_TYPE,\n      'FabricLogMessage': LOG_MESSAGE_TYPE,\n      'FabricServiceLogMessage': LOG_MESSAGE_TYPE,\n      'GenericTransferQueue': GENERIC_LIST_TYPE,\n      // TODO: document Generic type\n      // P2P Commands\n      'Generic': P2P_GENERIC,\n      'Cycle': OP_CYCLE,\n      'IdentityRequest': P2P_IDENT_REQUEST,\n      'IdentityResponse': P2P_IDENT_RESPONSE,\n      'ChainSyncRequest': P2P_CHAIN_SYNC_REQUEST,\n      // TODO: restore this type\n      // 'StateRoot': P2P_ROOT,\n      'Ping': P2P_PING,\n      'Pong': P2P_PONG,\n      'DocumentRequest': DOCUMENT_REQUEST_TYPE,\n      'DocumentPublish': DOCUMENT_PUBLISH_TYPE,\n      'BlockCandidate': BLOCK_CANDIDATE,\n      'PeerCandidate': PEER_CANDIDATE,\n      'PeerInstruction': P2P_INSTRUCTION,\n      'PeerMessage': P2P_BASE_MESSAGE,\n      'StartSession': SESSION_START,\n      'ChatMessage': CHAT_MESSAGE,\n      'StartChain': P2P_START_CHAIN,\n      // TODO: restore above StateRoot type\n      'StateRoot': P2P_STATE_ROOT,\n      'StateCommitment': P2P_STATE_COMMITTMENT,\n      'StateChange': P2P_STATE_CHANGE,\n      'StateRequest': P2P_STATE_REQUEST,\n      'Transaction': P2P_TRANSACTION,\n      'Call': P2P_CALL,\n      'LogMessage': LOG_MESSAGE_TYPE,\n      'EthereumBlock': TYPE_ETHEREUM_BLOCK,\n      'EthereumBlockNumber': TYPE_ETHEREUM_BLOCK_NUMBER\n    };\n  }\n\n  get codes () {\n    return Object.entries(this.types).reduce((ret, entry) => {\n      const [ key, value ] = entry;\n      ret[ value ] = key;\n      return ret;\n    }, {});\n  }\n\n  get magic () {\n    return this.raw.magic;\n  }\n\n  get size () {\n    return parseInt(Buffer.from(this.raw.size, 'hex'));\n  }\n\n  get version () {\n    return parseInt(Buffer.from(this.raw.version));\n  }\n\n  get header () {\n    const parts = [\n      Buffer.from(this.raw.magic, 'hex'),\n      Buffer.from(this.raw.version, 'hex'),\n      Buffer.from(this.raw.type, 'hex'),\n      Buffer.from(this.raw.size, 'hex'),\n      Buffer.from(this.raw.hash, 'hex')\n    ];\n\n    return Buffer.concat(parts);\n  }\n}\n\nObject.defineProperty(Message.prototype, 'type', {\n  get () {\n    const code = parseInt(this.raw.type.toString('hex'), 16);\n    switch (code) {\n      case GENERIC_MESSAGE_TYPE:\n        return 'GenericMessage';\n      case LOG_MESSAGE_TYPE:\n        return 'GenericLogMessage';\n      case GENERIC_LIST_TYPE:\n        return 'GenericList';\n      case DOCUMENT_PUBLISH_TYPE:\n        return 'DocumentPublish';\n      case DOCUMENT_REQUEST_TYPE:\n        return 'DocumentRequest';\n      case BLOCK_CANDIDATE:\n        return 'BlockCandidate';\n      case OP_CYCLE:\n        return 'Cycle';\n      case P2P_PING:\n        return 'Ping';\n      case P2P_PONG:\n        return 'Pong';\n      case P2P_GENERIC:\n        return 'Generic';\n      case P2P_CHAIN_SYNC_REQUEST:\n        return 'ChainSyncRequest';\n      case P2P_IDENT_REQUEST:\n        return 'IdentityRequest';\n      case P2P_IDENT_RESPONSE:\n        return 'IdentityResponse';\n      case P2P_BASE_MESSAGE:\n        return 'PeerMessage';\n      case P2P_STATE_ROOT:\n        return 'StateRoot';\n      case P2P_STATE_CHANGE:\n        return 'StateChange';\n      case P2P_STATE_REQUEST:\n        return 'StateRequest';\n      case P2P_TRANSACTION:\n        return 'Transaction';\n      case P2P_CALL:\n        return 'Call';\n      case PEER_CANDIDATE:\n        return 'PeerCandidate';\n      case SESSION_START:\n        return 'StartSession';\n      case CHAT_MESSAGE:\n        return 'ChatMessage';\n      case P2P_START_CHAIN:\n        return 'StartChain';\n      case TYPE_ETHEREUM_BLOCK:\n        return 'EthereumBlock';\n      case TYPE_ETHEREUM_BLOCK_NUMBER:\n        return 'EthereumBlockNumber';\n      default:\n        return 'GenericMessage';\n    }\n  },\n  set (value) {\n    let code = this.types[value];\n    // Default to GenericMessage;\n    if (!code) {\n      this.emit('warning', `Unknown message type: ${value}`);\n      code = this.types['GenericMessage'];\n    }\n\n    const padded = padDigits(code.toString(16), 8);\n    this['@type'] = value;\n    this.raw.type.write(padded, 'hex');\n  }\n});\n\nObject.defineProperty(Message.prototype, 'data', {\n  get () {\n    if (!this.raw.data) return '';\n    return this.raw.data.toString('utf8');\n  },\n  set (value) {\n    if (!value) value = '';\n    const hash = crypto.createHash('sha256').update(value.toString('utf8'));\n    this.raw.hash = hash.digest();\n    this.raw.data = Buffer.from(value);\n    this.raw.size.write(padDigits(this.raw.data.byteLength.toString(16), 8), 'hex');\n  }\n});\n\nmodule.exports = Message;\n","'use strict';\n\nconst Actor = require('./actor');\nconst Hash256 = require('./hash256');\n\nclass Label extends Actor {\n  constructor (input = '') {\n    super(input);\n    if (typeof input != 'string') input = super.serialize(input);\n    this._id = Hash256.digest(`@labels/${input}`);\n    return this;\n  }\n}\n\nmodule.exports = Label;\n","'use strict';\n\nmodule.exports = function padDigits (number, digits) {\n  return Array(Math.max(digits - String(number).length + 1, 0)).join(0) + number;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// Defaults\nimport * as state from '../settings/state';\n\n// Dependencies\nimport * as EC from '../../node_modules/elliptic/lib/elliptic/ec';\nimport merge from 'lodash.merge';\nimport React, { Component } from 'react';\n// import { connect } from 'react-redux';\n// import * as d3 from 'd3';\n// import * as D3GraphViz from 'd3-graphviz';\n// import { Graphviz } from 'graphviz-react';\n\n// Components\n// import FabricStateMapper from '../StateMapper';\nimport * as Actor from '@fabric/core/types/actor';\nimport { Card } from 'semantic-ui-react';\n\nclass FabricComponent extends Component {\n  constructor (props) {\n    super(props);\n\n    if (props.import) {\n      this.state = merge({\n        integrity: null,\n        status: 'PAUSED'\n      }, state, props);\n    }\n\n    // Fabric Actor\n    this.actor = new Actor(this.state);\n    this.ec = new EC('secp256k1');\n\n    // React Element\n    this.ref = React.createRef();\n\n    return this;\n  }\n\n  get genesis () {\n    return (this.actor) ? this.actor.id : '00000000000000000000000000000000';\n  }\n\n  get dochash () {\n    return (this.actor) ? this.actor.id : '00000000000000000000000000000000';\n  }\n\n  get link () {\n    return `fabric:${this.dochash}`;\n  }\n\n  get integrity () {\n    return 'sha256-deadbeefbabe';\n  }\n\n  componentDidMount () {\n    this.start();\n    console.log('[FABRIC:COMPONENT]', 'Mounted:', this);\n  }\n\n  componentWillReceiveProps (props) {\n    this.setState({\n      hash: props.hash\n    });\n  }\n\n  render () {\n    const dot = 'graph{a--b}';;\n    return (\n      <>\n        <fabric-component ref={this.ref}>\n          <Card>\n            <Card.Content>\n              <fabric-graph>\n                <svg id='graph' />\n                {/* <Graphviz dot={dot} /> */}\n              </fabric-graph>\n            </Card.Content>\n            <Card.Content>{this.props.children}</Card.Content>\n          </Card>\n        </fabric-component>\n      </>\n    );\n  }\n\n  start () {\n    const actor = new Actor(this.state);\n    console.log('actor:', actor);\n    console.log('actor ID:', actor.id.constructor.name, actor.id);\n    this.setState({ hash: actor.id });\n\n    // this.setState({ status: 'STARTED' });\n    // d3.select('#graph').graphviz().renderDot('digraph {a -> b}');\n\n    return this;\n  }\n}\n\nexport default FabricComponent;\n\n// TODO: debug why this can't be used on this parent class...\n// ```\n// TypeError: Class extends value #<Object> is not a constructor or null\n// Module.<anonymous>\n// src/components/FabricIdentityManager.js:19\n//   16 | import IdentityPicker from './IdentityPicker';\n//   17 | import SeedEntryForm from './SeedEntryForm';\n//   18 | \n// > 19 | class FabricIdentityManager extends FabricComponent {\n//   20 |   constructor (props) {\n//   21 |     super(props);\n//   22 | \n// ```\n// export default connect(FabricStateMapper)(FabricComponent);\n//\n// ...\n// End of @fabric/core/types/component\n","// State\nimport * as defaults from '../settings/state';\n\n// Dependencies\nimport merge from 'lodash.merge';\nimport FabricComponent from '../types/component';\n\n// Components\nimport {\n  Button,\n  Card,\n  Feed,\n  Icon,\n  Label\n} from 'semantic-ui-react';\n\n// Fabric Types\n// import * as Store from '@fabric/core/types/store';\n// import * as Worker from '@fabric/core/types/worker';\nimport * as Remote from '@fabric/http/types/remote';\n\nclass FabricBridge extends FabricComponent {\n  constructor (props) {\n    super(props);\n\n    this.settings = Object.assign({\n      host: 'localhost',\n      port: 9999\n    }, props);\n\n    this.state = merge({\n      integrity: 'sha256-deadbeefbabe',\n      status: 'disconnected',\n      messages: [],\n      meta: {\n        messages: {\n          count: 0\n        }\n      }\n    }, defaults, props);\n\n    console.log('bridge settings:', this.settings);\n\n    this.remote = new Remote({\n      host: 'nuevo' || this.settings.host,\n      port: this.settings.port,\n      secure: false\n    });\n\n    /* this.agent = new Worker({\n      service: main,\n      settings: settings\n    }); */\n\n    return this;\n  }\n\n  _handleRemoteMessage (message) {\n    console.log('Remote message:', message);\n    this._syncState();\n  }\n\n  _handleRemoteError (error) {\n    console.log('Remote error:', error);\n  }\n\n  _syncState () {\n    this.setState({\n      status: this.remote._state.status,\n      messages: this.remote._state.messages,\n      meta: this.remote._state.meta\n    });\n  }\n\n  componentDidMount () {\n    console.log('bridge mounted! starting...');\n    // this.agent.executeMethod('connect');\n    // this.process.executeMethod('connect');\n    this.start();\n  }\n\n  connect () {\n    this._syncState();\n    this.remote.connect();\n    this._syncState();\n  }\n\n  executeMethod (name, params) {\n    return this.remote.executeMethod(name, params);\n  }\n\n  ping () {\n    this.remote.ping();\n  }\n\n  render () {\n    return (\n      <>\n        <Card fluid>\n          <Card.Content>\n            <Button.Group floated='right'>\n              <Button onClick={this.ping.bind(this)}>Ping <Icon name='info' /></Button>\n              <Button onClick={this.connect.bind(this)}>Connect <Icon name='lightning' /></Button>\n            </Button.Group>\n            <Card.Header as='h3'>Bridge</Card.Header>\n          </Card.Content>\n          <Card.Content>\n            <Feed>\n              {this.state.messages.map((message, i) => {\n                return (\n                  <Feed.Event size='small' key={i} style={{ fontSize: '0.8em', fontFamily: 'monospace' }}>\n                    <Feed.Content>\n                      <div style={{color: 'black'}}>{JSON.stringify(message, null, '  ')}</div>\n                    </Feed.Content>\n                  </Feed.Event>\n                );\n              })}\n            </Feed>\n          </Card.Content>\n          <Card.Content extra>\n            <Label><Icon name='info' /> {this.remote._state.status}</Label>\n            <Label><Icon name='mail' /> {this.remote._state.meta.messages.count}</Label>\n          </Card.Content>\n        </Card>\n      </>\n    );\n  }\n\n  async _handleRemoteReady () {\n    this._syncState();\n    console.log('Remote ready!');\n    const balances = await this.executeMethod('btc_getbalances');\n    console.log('balances:', balances);\n  }\n\n  async send (message) {\n    return this.remote.send(message);\n  }\n\n  async start () {\n    this.remote.on('ready', this._handleRemoteReady.bind(this));\n    this.remote.on('message', this._handleRemoteMessage.bind(this));\n    this.remote.on('error', this._handleRemoteError.bind(this));\n    this.connect();\n  }\n}\n\nexport default FabricBridge;\n","import FabricComponent from '../types/component';\n\n// Components\nimport {\n  Button,\n  // Card,\n  // Container,\n  Icon,\n  // Grid,\n  Header,\n  // Label,\n  // Menu,\n  // Segment,\n  Table,\n  Card\n} from 'semantic-ui-react';\n\nclass TransactionList extends FabricComponent {\n  constructor (props) {\n    super(props);\n    this.state = {\n      transactions: [],\n      integrity: 'sha256-deadbeefbabe'\n    };\n  }\n\n  _addKey (key) {\n    // TODO: merge proper\n    this.setState({ keys: this.state.keys.concat(key) });\n  }\n\n  render () {\n    return (\n      <>\n        <div className='ui vertical stripe segment'>\n          <div className='ui stackable grid container'>\n            <div className='row'>\n              <div className='column'>\n                <Card fluid>\n                  <Card.Content>\n                    <Header><h1><Icon name='tasks' /> Transactions</h1></Header>\n                    <Table celled>\n                      <Table.Header>\n                        <Table.Row>\n                          <Table.HeaderCell>ID</Table.HeaderCell>\n                          <Table.HeaderCell>Version</Table.HeaderCell>\n                          <Table.HeaderCell>Inputs</Table.HeaderCell>\n                          <Table.HeaderCell>Outputs</Table.HeaderCell>\n                          <Table.HeaderCell>Signature</Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Header>\n                      <Table.Body>\n                        {this.state.transactions.map((transaction, index) => {\n                          return (\n                            <Table.Row key={index}>\n                              <Table.Cell>{transaction.id}</Table.Cell>\n                              <Table.Cell>{transaction.version}</Table.Cell>\n                              <Table.Cell>{transaction.inputs}</Table.Cell>\n                              <Table.Cell>{transaction.outputs}</Table.Cell>\n                              <Table.Cell>{transaction.signature}</Table.Cell>\n                            </Table.Row>\n                          );\n                        })}\n                      </Table.Body>\n                      {/* <Table.Footer>\n                        <Table.Row>\n                          <Table.HeaderCell colSpan='3'>\n                            <Menu floated='right' pagination>\n                              <Menu.Item as='a' icon>\n                                <Icon name='chevron left' />\n                              </Menu.Item>\n                              <Menu.Item as='a'>1</Menu.Item>\n                              <Menu.Item as='a'>2</Menu.Item>\n                              <Menu.Item as='a'>3</Menu.Item>\n                              <Menu.Item as='a'>4</Menu.Item>\n                              <Menu.Item as='a' icon>\n                                <Icon name='chevron right' />\n                              </Menu.Item>\n                            </Menu>\n                          </Table.HeaderCell>\n                        </Table.Row>\n                      </Table.Footer> */}\n                    </Table>\n                  </Card.Content>\n                </Card>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default TransactionList;\n","// Cryptography\nimport { createHash } from 'crypto';\n\n// Dependencies\nimport * as bitcoin from 'bitcoinjs-lib';\n\n// React\nimport merge from 'lodash.merge';\nimport React from 'react';\n// import { connect } from 'react-redux';\n// import FabricStateMapper from '../StateMapper';\n\n// Fabric Types\nimport FabricComponent from '../types/component';\n\n// Fabric Services\n// import Bitcoin from '@fabric/core/services/bitcoin';\n\n// Components\nimport {\n  Button,\n  // Container,\n  Dropdown,\n  Form,\n  // Grid,\n  Icon,\n  Input\n  // Menu,\n  // Segment\n} from 'semantic-ui-react';\n\n// Internals\n// import FabricKeyPair from './FabricKeyPair';\n\n// Fabric Types\nimport * as Actor from '@fabric/core/types/actor';\n// import * as Key from '@fabric/core/types/key';\n// import * as Signer from '@fabric/core/types/signer';\n\nclass FaucetDripForm extends FabricComponent {\n  constructor (props) {\n    super(props);\n\n    this.settings = merge({\n      network: 'regtest'\n    }, props);\n\n    /* this.wallet = new Wallet({\n      network: this.settings.network\n    }); */\n\n    // this.key = new Key(this.settings);\n    // this._key = new bcoin.hd.key();\n\n    // TODO: prepare Fabric\n    // i.e., use _state here, then import from getter and apply properties\n    // _from_ @react\n    this.state = merge({\n      content: {\n        requests: []\n      },\n      fields: {\n        address: ''\n      },\n      requests: {},\n      secret: Actor.randomBytes(32) // solution hash (revealed on trade)\n    }, props);\n\n    // this.bitcoin = new Bitcoin(this.settings);\n    this.form = React.createRef();\n\n    return this;\n  }\n\n  get networks () {\n    return {\n      'mainnet': bitcoin.networks.mainnet,\n      'regtest': bitcoin.networks.regtest,\n      'testnet': bitcoin.networks.testnet\n    };\n  }\n\n  _handleAddressChange (e) {\n    this.setState({\n      fields: {\n        address: e.target.value\n      }\n    });\n\n    console.log('state:', this.state);\n    console.log('value:', e.target.value);\n    console.log('network:', this.networks.regtest);\n    const isValid = this.validateAddress(e.target.value);\n    console.log('isValid:', isValid);\n\n    if (isValid) {\n\n    } else {\n      this.setState({\n        status: 'ERROR',\n        errors: [\n          'Invalid Bitcoin address.'\n        ]\n      });\n    }\n  }\n\n  _handleSecretChange (e) {\n    this.setState({ secret: e.target.value });\n  }\n\n  _handleSubmitButtonClick (e) {\n    console.log('submit button click:', e);\n  }\n\n  handleChange (e) {\n    const fields = { ...this.state.fields, [e.target.name]: e.target.value };\n    // TODO: merge old state\n    this.setState({ fields: fields });\n  }\n\n  handleSubmit (e) {\n    console.log('submitting:', e);\n    const { name, email } = this.state\n    this.setState({ submittedName: name, submittedEmail: email })\n  }\n\n  regenerate () {\n    this.setState({ secret: Actor.randomBytes(32) });\n    this.sync();\n  }\n\n  render () {\n    return (\n      <>\n        <Form ref={this.form} onSubmit={this.props.onSubmit.bind(this)} onChange={this.handleChange.bind(this)}>\n          <Form.Field>\n            <label>Request a deposit to...</label>\n            <div className='ui input'>\n              <Input action type='text' placeholder='Enter a Bitcoin address here' onKeyUp={this._handleAddressChange.bind(this)} />\n              <Button attached type='submit' color='green' content='Request' type='submit' icon='right chevron' labelPosition='right' />\n            </div>\n          </Form.Field>\n        </Form>\n      </>\n    );\n  }\n\n  start () {\n    console.log('[FAUCET:DRIPS]', 'Starting component...');\n    super.start();\n    this.sync();\n    return this;\n  }\n\n  sync () {\n    const preimage = createHash('sha256').update(this.state.secret).digest('hex');\n    this.setState({ preimage: preimage });\n    return this;\n  }\n\n  validateAddress (address) {\n    try {\n      bitcoin.address.toOutputScript(address, this.networks[this.settings.network]);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n}\n\n// export default PortalOrderForm;\nexport default FaucetDripForm;\n","// Dependencies\nimport React from 'react';\nimport {\n  Link\n} from 'react-router-dom';\n\n// Components\nimport {\n  Card,\n  Container,\n  Divider,\n  Icon,\n  // Grid,\n  // Menu,\n  Segment,\n  Visibility\n} from 'semantic-ui-react';\n\nimport FabricComponent from './types/component';\n\nimport FabricBridge from './components/FabricBridge';\n// import FabricDebugger from './components/FabricDebugger';\n\nimport FaucetDripForm from './components/FaucetDripForm';\n// import FabricIdentityManager from './components/FabricIdentityManager';\n// import PortalMenu from './components/PortalMenu';\n\nclass Home extends FabricComponent {\n  constructor (props) {\n    super(props);\n\n    // TODO: prepare Fabric\n    // i.e., use _state here, then import from getter and apply properties\n    // _from_ @react\n    this.state = {\n      integrity: 'sha256-deadbeefbabe'\n    };\n\n    this.bridge = React.createRef();\n    this.form = React.createRef();\n\n    return;\n  }\n\n  onSubmit (e) {\n    console.log('submitting:', e);\n    const { address } = this.state;\n    this.setState({ address: address });\n\n    const message = {\n      content: 'Hello, world!'\n    };\n\n    this.bridge.current.send(message).then((result) => {\n      console.log('result:', result);\n    });\n  }\n\n  render () {\n    return (\n      <>\n        <fabric-bridge-home ref={this.ref}>\n          <Visibility onBottomPassed={this._handleMastheadBottomPassed.bind(this)}>\n            <Segment className='ui inverted vertical masthead center aligned segment'>\n              <Container className='ui text container'>\n                <h1 className='ui inverted header'><Icon name='tint' /> bitfaucet</h1>\n                <h2>The official <code>@fabric/playnet</code> faucet.</h2>\n                <Container className='left aligned' style={{ marginTop: '5em' }}>\n                  <Card fluid>\n                    <Card.Content>\n                      <FaucetDripForm ref={this.form} onSubmit={this.onSubmit.bind(this)} />\n                    </Card.Content>\n                  </Card>\n                  <Card fluid>\n                    <Card.Content>\n                      <FabricBridge ref={this.bridge} onChange={this._handleBridgeChange.bind(this)} state={this.state} />\n                    </Card.Content>\n                  </Card>\n                </Container>\n              </Container>\n            </Segment>\n          </Visibility>\n        </fabric-bridge-home>\n      </>\n    );\n  }\n\n  _handleBridgeChange (event) {\n    console.log('bridge change:', event);\n  }\n\n  _handleMastheadBottomPassed (e, { calculations }) {\n    console.log('vis change:', e, calculations);\n    this.setState({ calculations });\n  }\n}\n\nexport default Home;\n","// Dependencies\nimport * as state from './settings/state';\nimport * as merge from 'lodash.merge';\n\n// React\nimport React from 'react';\n// import { Provider } from 'react-redux';\n// import { createStore } from 'redux';\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from 'react-router-dom';\n// import * as Fabric from '@fabric/core';\n\n// Stylesheets\nimport './App.css';\nimport './semantic.css';\nimport './index.css';\n\n// Components\n/* import {\n  Container,\n  Divider,\n  Grid,\n  Icon,\n  Menu,\n  Segment,\n  Sidebar,\n  // Visibility\n} from 'semantic-ui-react'; */\n\n// Fabric Types\nimport Actor from '@fabric/core/types/actor';\nimport FabricComponent from './types/component';\n\n// Fabric Components\nimport FabricBridge from './components/FabricBridge';\nimport FabricDebugger from './components/FabricDebugger';\n// import FabricIdentityManager from './components/FabricIdentityManager';\n// import FabricNodeList from './components/FabricNodeList';\nimport FabricTransactionList from './components/FabricTransactionList';\n\n// Portal\nimport Home from './Home';\n\n/**\n * The Portal web application.\n */\nclass App extends FabricComponent {\n  constructor (settings) {\n    super(settings);\n\n    this.settings = merge({}, state, settings);\n\n    // this.fabric = new Fabric();\n    this.state = merge({\n      actor: null,\n      integrity: null,\n      snapshots: []\n    }, state, settings);\n\n    return this;\n  }\n\n  _handleBridgeChange (event) {\n    console.log('bridge change:', event);\n  }\n\n  componentDidMount () {\n    const proof = new Actor(this.state);\n    return this;\n  }\n\n  render () {\n    return (\n      <react-application id='root'>\n        <Router>\n          <div className='pusher'>\n            <Routes>\n              <Route path='/' exact element={<Home state={this.state} balances={this.state.balances} keys={this.state.keys} />} />\n              <Route path='/transactions' element={<FabricTransactionList state={this.state} balances={this.state.balances} keys={this.state.keys} />} />\n            </Routes>\n            {/*\n            <Segment className='ui inverted vertical footer segment'>\n              <Container className='ui container'>\n                <FabricDebugger />\n                <Divider />\n                <FabricBridge onChange={this._handleBridgeChange.bind(this)} port={this.settings.port} />\n              </Container>\n            </Segment>\n            */}\n          </div>\n        </Router>\n      </react-application>\n    );\n  }\n}\n\nexport default App;\n","/**\n * Copyright: 2019, Fabric Labs\n */\n\n// React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\n// Redux\n// import { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n// import createSagaMiddleware from 'redux-saga';\n\n// Assets\nimport * as state from './settings/state';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n// Components\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\n// Functions\n// import sendToAnalytics from './functions/sendToAnalytics';\n\n// State\nimport * as initialState from './settings/state';\n\nfunction reducer (state = initialState, action = { type: 'UNDEFINED_ACTION' }) {\n  switch (action.type) {\n    case 'SEED_ADDED':\n      return {\n        seed: state.seed\n      };\n    case 'RESET':\n      return {\n        status: 'RESET'\n      };\n    default:\n      return state;\n  }\n}\n\n// const sagas = createSagaMiddleware();\n// const store = createStore(reducer, applyMiddleware(sagas));\n\n// sagas.run(RPCRequest);\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n    {/* <Provider> */}\n      <App state={state} />\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// TODO: enable Service Worker by disabling the line below, then test Fabric's\n// cache and the `@fabric/core/types/store` class — latest should be completely\n// isomorphic, so we're almost fully able to run in the browser now!\nserviceWorker.unregister();\n\n// reportWebVitals(sendToAnalytics);\n","'use strict';\n\n// Dependencies\nconst crypto = require('crypto');\nconst { EventEmitter } = require('events');\nconst monitor = require('fast-json-patch');\n\n// Fabric Types\nconst Hash256 = require('./hash256');\n\n// Fabric Functions\nconst _sortKeys = require('../functions/_sortKeys');\n\n/**\n * Generic Fabric Actor.\n * @access protected\n * @emits message Fabric {@link Message} objects.\n * @property {String} id Unique identifier for this Actor (id === SHA256(preimage)).\n * @property {String} preimage Input hash for the `id` property (preimage === SHA256(ActorState)).\n */\nclass Actor extends EventEmitter {\n  /**\n   * Creates an {@link Actor}, which emits messages for other\n   * Actors to subscribe to.  You can supply certain parameters\n   * for the actor, including key material [!!!] — be mindful of\n   * what you share with others!\n   * @param {Object} [actor] Object to use as the actor.\n   * @param {String} [actor.seed] BIP24 Mnemonic to use as a seed phrase.\n   * @param {Buffer} [actor.public] Public key.\n   * @param {Buffer} [actor.private] Private key.\n   * @returns {Actor} Instance of the Actor.  Call {@link Actor#sign} to emit a {@link Signature}.\n   */\n  constructor (actor = {}) {\n    super(actor);\n\n    this.log = [];\n    this.signature = null;\n    this.value = this._readObject(actor); // TODO: use Buffer?\n\n    // Internal State\n    this._state = {\n      '@type': 'Actor',\n      '@data': this.value,\n      status: 'PAUSED',\n      content: this.value || {}\n    };\n\n    // Chainable\n    return this;\n  }\n\n  static fromAny (input = {}) {\n    let state = null;\n\n    if (typeof input === 'string') {\n      state = { content: input };\n    } else if (input instanceof Buffer) {\n      state = { content: input.toString('hex') };\n    } else {\n      state = Object.assign({}, input);\n    }\n\n    return new Actor(state);\n  }\n\n  static fromJSON (input) {\n    let result = null;\n\n    if (typeof input === 'string' && input.length) {\n      console.log('trying to parse as JSON:', input);\n      try {\n        result = JSON.parse(input);\n      } catch (E) {\n        console.error('Failure in fromJSON:', E);\n      }\n    } else {\n      console.trace('Invalid input:', typeof input);\n    }\n\n    return result;\n  }\n\n  static randomBytes (count = 32) {\n    return crypto.randomBytes(count);\n  }\n\n  get id () {\n    const buffer = Buffer.from(this.preimage, 'hex');\n    return Hash256.digest(buffer);\n  }\n\n  get preimage () {\n    const input = {\n      '@type': 'FabricActorState',\n      '@data': this.toObject()\n    };\n\n    const string = JSON.stringify(input, null, '  ');\n    const buffer = Buffer.from(string, 'utf8');\n\n    return Hash256.digest(buffer);\n  }\n\n  get state () {\n    return this._state.content;\n  }\n\n  get type () {\n    return this._state['@type'];\n  }\n\n  /**\n   * Resolve the current state to a commitment.\n   * @emits Actor Current malleable state.\n   * @returns {String} 32-byte ID\n   */\n  commit () {\n    const state = new Actor(this._state.content);\n    this.log.push(...state.id);\n    this.emit('commit', state);\n    return state.id;\n  }\n\n  debug (...params) {\n    this.emit('debug', params);\n  }\n\n  /**\n   * Casts the Actor to a normalized Buffer.\n   * @returns {Buffer}\n   */\n  toBuffer () {\n    return Buffer.from(this.serialize(), 'utf8');\n  }\n\n  /**\n   * Returns the Actor's current state as an {@link Object}.\n   * @returns {Object}\n   */\n  toObject () {\n    return _sortKeys(this.state);\n  }\n\n  toString (format = 'json') {\n    switch (format) {\n      case 'hex':\n        return Buffer.from(this.serialize(), 'utf8').toString('hex');\n      case 'json':\n      default:\n        return this.serialize();\n    }\n  }\n\n  pause () {\n    this.status = 'PAUSING';\n    this.commit();\n    return this;\n  }\n\n  /**\n   * Serialize the Actor's current state into a JSON-formatted string.\n   * @returns {String}\n   */\n  serialize () {\n    let json = null;\n\n    try {\n      json = JSON.stringify(this.toObject(), null, '  ');\n    } catch (exception) {\n      json = JSON.stringify({\n        type: 'Error',\n        content: `Exception serializing: ${exception}`\n      }, null, '  ');\n    }\n\n    return json;\n  }\n\n  /**\n   * Signs the Actor.\n   * @returns {Actor}\n   */\n  sign () {\n    throw new Error('Unimplemented on this branch.  Use @fabric/core/types/signer instead.');\n    /* this.signature = this.key._sign(this.toBuffer());\n    this.emit('signature', this.signature);\n    return this; */\n  }\n\n  /**\n   * Toggles `status` property to unpaused.\n   * @\n   * @returns {Actor}\n   */\n  unpause () {\n    this.status = 'UNPAUSING';\n    this.commit();\n    this.status = 'UNPAUSED';\n    return this;\n  }\n\n  /**\n   * Incurs 1 SYSCALL\n   * @access private\n   * @returns {Object}\n   */\n  _getState () {\n    return this.state;\n  }\n\n  _readObject (input = {}) {\n    let state = {};\n\n    if (typeof input === 'string') {\n      state = Object.assign(state, {\n        type: 'String',\n        content: input\n      });\n    } else if (input instanceof Buffer) {\n      state = Object.assign(state, {\n        type: 'Buffer',\n        content: input.toString('hex'),\n        encoding: 'hex'\n      });\n    } else {\n      state = Object.assign(state, input);\n    }\n\n    return state;\n  }\n}\n\nmodule.exports = Actor;\n"],"sourceRoot":""}